const { EmbedBuilder } = require("discord.js");
const { commandBuilders } = require(`${process.cwd()}/Events/functions`);
const path = require("node:path");

const commands = new commandBuilders({
  name: path.parse(__filename).name, // T√™n L·ªánh ch√≠nh
  usage: path.parse(__filename).name, // C√°ch s·ª≠ d·ª•ng khi d√πng l·ªánh help.
  category: path.parse(__dirname).name, // th·ªÉ lo·∫°i l·ªánh
  aliases: ["uinfo", "memberinfo"], // l·ªánh ph·ª•
  description: "Xem th√¥ng tin c·ªßa th√†nh vi√™n", // m√¥ t·∫£ d√†nh cho l·ªánh
  cooldown: 5, // th·ªùi gian h·ªìi l·ªánh
  owner: false, // b·∫≠t t·∫Øt ch·∫ø ƒë·ªô dev
  permissions: [] // quy·ªÅn h·∫°n khi s·ª≠ d·ª•ng l·ªánh
}).addCommand((client, message, args, prefix) => {
  try {
      const member = message.guild.members.cache.get(message.mentions.members.first().id);
      if(!member) return;
      const badgeFlags = {
        DEVELOPER: "üë®‚Äçüíª",
        BUGS: "üêõ",
        MANAGEMENT: "üëë",
        PREMIUM: "üëë",
        SUPPORTER: "üë®‚Äçüîß",
        TEAM: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶",
        BOOSTER: "üöÄ",
        PARTNER: "ü§ù",
        VOTER: "üó≥Ô∏è",
        SUPPORT: "üîß",
        MODERATOR: "üëÆ‚Äç‚ôÇÔ∏è",
        DESIGNER: "üé®",
        MARKETING: "üìà"
      };
      const flags = {
        ActiveDeveloper: "üë®‚Äçüíª„ÉªActive Developer",
        BugHunterLevel1: "üêõ„ÉªDiscord Bug Hunter",
        BugHunterLevel2: "üêõ„ÉªDiscord Bug Hunter",
        CertifiedModerator: "üëÆ‚Äç‚ôÇÔ∏è„ÉªCertified Moderator",
        HypeSquadOnlineHouse1: "üè†„ÉªHouse Bravery Member",
        HypeSquadOnlineHouse2: "üè†„ÉªHouse Brilliance Member",
        HypeSquadOnlineHouse3: "üè†„ÉªHouse Balance Member",
        HypeSquadEvents: "üè†„ÉªHypeSquad Events",
        PremiumEarlySupporter: "üëë„ÉªEarly Supporter",
        Partner: "üëë„ÉªPartner",
        Quarantined: "üîí„ÉªQuarantined", // Kh√¥ng ch·∫Øc ch·∫Øn c√°i n√†y c√≤n ho·∫°t ƒë·ªông :))
        Spammer: "üîí„ÉªSpammer", // Kh√¥ng ch·∫Øc ch·∫Øn c√°i n√†y c√≤n ho·∫°t ƒë·ªông :)
        Staff: "üë®‚Äçüíº„ÉªDiscord Staff",
        TeamPseudoUser: "üë®‚Äçüíº„ÉªDiscord Team",
        VerifiedBot: "ü§ñ„ÉªVerified Bot",
        VerifiedDeveloper: "üë®‚Äçüíª„Éª(early)Verified Bot Developer",
      };
      const roles = member.roles.cache.sort((a, b) => b.position - a.position).map(role => role.toString()).slice(0, -1);
      const userFlags = member.user.flags ? member.user.flags.toArray() : [];

      return message.reply({ embeds: [new EmbedBuilder()
        .setTitle("Xem th√¥ng tin ng∆∞·ªùi d√πng")
        .setThumbnail(member.user.displayAvatarURL({ dynamic: true, size: 1024 }))
        .setDescription(`Th√¥ng tin v·ªÅ ${member.user.username}`)
        .setImage(member.user.bannerURL({ dynamic: true, size: 1024 }))
        .addFields([
          { name: "t√™n th√†nh vi√™n", value: `${member.user.username}`, inline: true },
          { name: "S·ªë ƒë·ªãnh danh", value: `${member.user.discriminator}`, inline: true },
          { name: "Bi·ªát danh", value: `${member.nickname || 'kh√¥ng c√≥ bi·ªát danh'}`, inline: true },
          { name: "Id", value: `${member.user.id}`, inline: true },
          { name: "Huy hi·ªáu c·ªßa th√†nh vi√™n", value: `${userFlags.length ? userFlags.map(flag => flags[flag]).join(', ') : 'Kh√¥ng c√≥'}`, inline: true },
          { name: "Ng√†y tham gia discord", value: `<t:${Math.round(member.user.createdTimestamp / 1000)}>`, inline: true },
          { name: "Ng√†y tham gia server", value: `<t:${Math.round(member.joinedAt / 1000)}>`, inline: true },
          { name: `Roles [${roles.length}]`, value: `${roles.length ? roles.join(', ') : 'Kh√¥ng c√≥'}`, inline: false }
        ])                     
      ]});
  } catch(e) {
    console.log(e)
    return message.reply({ content: "B·∫°n qu√™n v·∫´n ch∆∞a ping m·ªôt ai ƒë√≥" });
  };
});
// console.log(data.toJSON()); // hi·ªÉn th·ªã th√¥ng tin l·ªánh ·ªü d·∫°ng JSON
module.exports = commands;